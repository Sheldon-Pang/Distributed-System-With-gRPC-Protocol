// A simple password saver (not really secure though). User can send over a password and give the password a name to distinguish it from others.
// The system will randomly choose a key and encrypt the password before saving. 
// The user can retrieve a password through using the "name" given to the password, the server will decrypt and send the decrypted password to the user. 
// The user can also ask for a list of all password, which will return a list of "names" of passwords not the passwords itself. 
// How you handle overwriting a password is your decision. 


syntax = "proto3";

option java_multiple_files = true;
option java_package = "service";
option java_outer_classname = "CaesarProto";

package services;

import "google/protobuf/empty.proto";

service Caesar {
  rpc encrypt (SaveReq) returns (SaveRes) {}
  rpc decrypt (PasswordReq) returns (PasswordRes) {}
  rpc listPasswords (google.protobuf.Empty) returns (PasswordList) {}
}

// The request Password
message SaveReq {
  string password = 1;
  string name = 2;

}

// The response Password
message SaveRes {
  bool ok = 1;
  string error = 3; // only used if ok is false
}

// Request a specific password
message PasswordReq {
  string name = 1;
}

// The request Password
message PasswordRes {
  bool ok = 1;
  string password = 2; // returns the decrypted password
  string error = 3; // only used if ok is false
}

message PasswordList {
  repeated string  passList = 1; // list of names of the saved passwords
}
